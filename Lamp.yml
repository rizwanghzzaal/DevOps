---
AWSTemplateFormatVersion: '2010-09-09'

Description: Create an AWS EC2 instance with a LAMP stack

# Create the following AWS resources:
#
# - A security group for web (80/443) access to the EC2 instance (SGWeb)
# - An Amazon EC2 instance running Amazon Linux 2 (LampInstance)
#
# Then:
#
# - Install some core Linux components
# - Install and configure Apache, PHP, and MySQL
#
# Notes:
#
# - The MySQL root password is stored in the /home/ec2-user directory

Parameters:
  AzName:
    Type: AWS::EC2::AvailabilityZone::Name
    Description: Select Availability Zone
    Default: 'us-east-1b'

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select VPC
    Default: 'vpc-0d7cdede28244476b'

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select subnet
    Default: 'subnet-04995b78c2abf10b4'

  SGWebCidr:
    Type: String
    Description: The CIDR address range that can browse to the EC2 instance
    MinLength: 9
    MaxLength: 18
    Default: "0.0.0.0/0"
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x

  DbRootPassword:
    NoEcho: 'true'
    Type: String
    Description: DB root password (8-32 alphanumerics)
    MinLength: 8
    MaxLength: 32
    AllowedPattern: "[a-zA-Z0-9]*"

  LatestAmazonLinux2AmiId:
    Type : 'AWS::SSM::Parameter::Value<String>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  
  InstanceName:
    Description: Name of the instance
    Type: String
    Default: 'Basic-Lamp'

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.    

Resources:
  SGWeb:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP/HTTPS access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '80'
        ToPort: '80'
        CidrIp: !Ref SGWebCidr
      - IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: !Ref SGWebCidr
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref SGWebCidr
      VpcId: !Ref VpcId

  LampInstance:
    Type: AWS::EC2::Instance

    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M

    Properties:
      AvailabilityZone: !Ref AzName
      ImageId: !Ref LatestAmazonLinux2AmiId
      InstanceInitiatedShutdownBehavior: stop
      InstanceType:
        Ref: InstanceType
      Monitoring: 'true'
      KeyName:
        Ref: KeyName      
      NetworkInterfaces:
      - AssociatePublicIpAddress: 'true'
        DeviceIndex: '0'
        GroupSet:
        - !Ref SGWeb
        SubnetId: !Ref SubnetId
      Tenancy: default
      Tags:
       - Key: Name
         Value: !Ref InstanceName
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          HOMEDIR=/home/ec2-user

          yum update -y
          
          amazon-linux-extras install lamp-mariadb10.2-php7.2

          echo Installing packages...
          echo Please ignore messages regarding SELinux...
          yum install -y \
            httpd \
            mariadb-server \
            php \
            php-gd \
            php-mbstring \
            php-mysqlnd \
            php-xml \
            php-xmlrpc

          MYSQL_ROOT_PASSWORD=${DbRootPassword}
          echo $MYSQL_ROOT_PASSWORD > $HOMEDIR/MYSQL_ROOT_PASSWORD
          chown ec2-user $HOMEDIR/MYSQL_ROOT_PASSWORD

          echo Starting database service...
          sudo systemctl start mariadb
          sudo systemctl enable mariadb

          echo Setting up basic database security...
          mysql -u root <<EOF
          UPDATE mysql.user SET Password=PASSWORD('$MYSQL_ROOT_PASSWORD') WHERE User='root';
          DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
          DELETE FROM mysql.user WHERE User='';
          DROP DATABASE IF EXISTS test;
          FLUSH PRIVILEGES;
          EOF

          echo Configuring Apache...
          usermod -a -G apache ec2-user
          chown -R ec2-user:apache /var/www
          chmod 2775 /var/www && find /var/www -type d -exec chmod 2775 {} \;
          find /var/www -type f -exec chmod 0664 {} \;

          echo Starting Apache...
          sudo systemctl start httpd
          sudo systemctl enable httpd

          /opt/aws/bin/cfn-signal \
            -e $? \
            --stack ${AWS::StackName} \
            --resource LampInstance \
            --region ${AWS::Region}

Outputs:
  LampInstanceId:
    Description: LampInstance Instance Id
    Value: !Ref LampInstance

  LampInstanceIP:
    Description: LampInstance IP Address
    Value: !GetAtt LampInstance.PublicIp
